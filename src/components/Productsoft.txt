import React, { useState, useRef } from 'react';
import { motion, useMotionValue, useSpring, useTransform } from 'framer-motion';
import { useNavigate } from "react-router-dom";

function ProductCardsoft({ image, title, link }: { image: string; title: string; link: string }) {
  const navigate = useNavigate();
  const [isHovered, setIsHovered] = useState(false);
  const [isClicked, setIsClicked] = useState(false);
  const ref = useRef<HTMLDivElement>(null);

  // Mouse position for 3D tilt effect
  const x = useMotionValue(0);
  const y = useMotionValue(0);
  
  // Spring animations for smooth movement
  const mouseXSpring = useSpring(x, { stiffness: 500, damping: 40 });
  const mouseYSpring = useSpring(y, { stiffness: 500, damping: 40 });
  
  // Transform mouse position to rotation
  const rotateX = useTransform(mouseYSpring, [-0.5, 0.5], ["15deg", "-15deg"]);
  const rotateY = useTransform(mouseXSpring, [-0.5, 0.5], ["-15deg", "15deg"]);
  const scale = useTransform(mouseXSpring, [-0.5, 0.5], [0.98, 1.02]);

  const handleClick = () => {
    setIsClicked(true);
    setTimeout(() => setIsClicked(false), 200);
    
    if (link.startsWith("#")) {
      // للانتقال إلى قسم في نفس الصفحة
      document.querySelector(link)?.scrollIntoView({ behavior: "smooth" });
    } else {
      // للانتقال إلى صفحة أخرى
      navigate(link);
    }
  };

  const handleMouseMove = (e: React.MouseEvent<HTMLDivElement>) => {
    if (!ref.current) return;
    
    const rect = ref.current.getBoundingClientRect();
    const width = rect.width;
    const height = rect.height;
    const mouseX = e.clientX - rect.left;
    const mouseY = e.clientY - rect.top;
    
    const xPct = mouseX / width - 0.5;
    const yPct = mouseY / height - 0.5;
    
    x.set(xPct);
    y.set(yPct);
  };

  const handleMouseEnter = () => {
    setIsHovered(true);
  };

  const handleMouseLeave = () => {
    x.set(0);
    y.set(0);
    setIsHovered(false);
  };

  // Animation variants
  const cardVariants = {
    initial: { opacity: 0, y: 60, scale: 0.9 },
    animate: { 
      opacity: 1, 
      y: 0, 
      scale: 1,
      transition: {
        duration: 0.6,
        ease: [0.25, 0.46, 0.45, 0.94]
      }
    },
    hover: {
      y: -8,
      transition: { duration: 0.3, ease: "easeOut" }
    }
  };

  const imageVariants = {
    initial: { scale: 1, rotateZ: 0 },
    hover: { 
      scale: 1.1,
      rotateZ: 1,
      transition: { duration: 0.4, ease: "easeOut" }
    }
  };

  const overlayVariants = {
    initial: { opacity: 0, scale: 1.2 },
    hover: { 
      opacity: 1,
      scale: 1,
      transition: { duration: 0.3 }
    }
  };

  const titleVariants = {
    initial: { y: 0 },
    hover: { 
      y: -2,
      transition: { duration: 0.2 }
    }
  };

  return (
    <div className="perspective-1000 p-4">
      <motion.div
        ref={ref}
        onClick={handleClick}
        onMouseMove={handleMouseMove}
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        variants={cardVariants}
        initial="initial"
        animate="animate"
        whileHover="hover"
        style={{
          rotateX,
          rotateY,
          scale,
          transformStyle: "preserve-3d",
        }}
        className={`relative cursor-pointer group ${isClicked ? 'animate-pulse' : ''}`}
      >
        {/* Floating Background Elements */}
        <div className="absolute -inset-10 opacity-30">
          <div className="absolute top-0 left-0 w-20 h-20 bg-gradient-to-br from-blue-400/40 to-purple-600/40 rounded-full blur-2xl animate-pulse" />
          <div className="absolute bottom-0 right-0 w-16 h-16 bg-gradient-to-br from-cyan-400/40 to-pink-500/40 rounded-full blur-2xl animate-pulse" style={{ animationDelay: '1s' }} />
          <div className="absolute top-1/2 left-1/2 w-12 h-12 bg-gradient-to-br from-purple-400/30 to-blue-500/30 rounded-full blur-xl animate-pulse" style={{ animationDelay: '2s' }} />
        </div>

        {/* Main Card Container */}
        <div 
          className="relative bg-white/20 backdrop-blur-2xl rounded-3xl overflow-hidden shadow-2xl border border-white/30 transform-gpu"
          style={{ transform: "translateZ(0)" }}
        >
          
          {/* Dynamic Gradient Background */}
          <div className="absolute inset-0">
            <div className="absolute inset-0 bg-gradient-to-br from-sky-100/50 via-blue-50/30 to-purple-50/50" />
            <div className="absolute inset-0 bg-gradient-to-tr from-transparent via-blue-100/20 to-purple-100/30 opacity-0 group-hover:opacity-100 transition-opacity duration-500" />
          </div>

          {/* Content */}
          <div className="relative p-6 text-center">
            
            {/* Image Container with 3D Effects */}
            <motion.div 
              className="relative mb-4 overflow-hidden rounded-2xl"
              style={{ transform: "translateZ(30px)" }}
              variants={imageVariants}
            >
              {/* Glowing Border */}
              <div className="absolute -inset-1 bg-gradient-to-r from-blue-400/50 via-purple-500/50 to-cyan-400/50 rounded-2xl opacity-0 group-hover:opacity-100 blur-sm transition-opacity duration-300" />
              
              {/* Image */}
              <div className="relative overflow-hidden rounded-2xl shadow-2xl">
                <img
                  src={image}
                  alt={title}
                  className="w-full h-48 object-cover transition-all duration-700 group-hover:scale-110 group-hover:brightness-110"
                />
                
                {/* Overlay Effects */}
                <motion.div
                  variants={overlayVariants}
                  className="absolute inset-0 bg-gradient-to-t from-black/30 via-transparent to-transparent"
                />
                
                {/* Shimmer Effect */}
                <div className="absolute inset-0 bg-gradient-to-r from-transparent via-white/40 to-transparent -skew-x-12 -translate-x-full group-hover:translate-x-full transition-transform duration-1000 opacity-0 group-hover:opacity-100" />
                
                {/* Corner Sparkles */}
                <div className="absolute top-2 right-2 w-3 h-3 bg-white/80 rounded-full opacity-0 group-hover:opacity-100 animate-ping" />
                <div className="absolute bottom-2 left-2 w-2 h-2 bg-blue-400/80 rounded-full opacity-0 group-hover:opacity-100 animate-pulse" />
              </div>

              {/* Floating Particles */}
              <motion.div
                className="absolute -top-2 -right-2 w-4 h-4 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full"
                animate={isHovered ? {
                  y: [-3, 3, -3],
                  x: [0, 2, 0],
                  rotate: [0, 180, 360],
                  scale: [1, 1.2, 1]
                } : {}}
                transition={{ duration: 2, repeat: Infinity }}
              />
              <motion.div
                className="absolute -bottom-1 -left-1 w-3 h-3 bg-gradient-to-r from-cyan-400 to-pink-500 rounded-full"
                animate={isHovered ? {
                  y: [2, -2, 2],
                  x: [-1, 1, -1],
                  rotate: [0, -180, -360],
                  scale: [0.8, 1.1, 0.8]
                } : {}}
                transition={{ duration: 1.8, repeat: Infinity, delay: 0.5 }}
              />
            </motion.div>
            
            {/* Title with Enhanced Effects */}
            <motion.div
              style={{ transform: "translateZ(20px)" }}
              variants={titleVariants}
              className="relative"
            >
              <h2 className="text-lg font-bold text-gray-800 mb-2 relative">
                {/* Main Title */}
                <span className="relative z-10 bg-gradient-to-r from-gray-800 via-blue-700 to-purple-700 bg-clip-text text-transparent group-hover:from-blue-600 group-hover:via-purple-600 group-hover:to-cyan-600 transition-all duration-300">
                  {title}
                </span>
                
                {/* Glowing Text Shadow */}
                <span 
                  className="absolute inset-0 bg-gradient-to-r from-blue-400/30 to-purple-400/30 bg-clip-text text-transparent blur-sm opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                >
                  {title}
                </span>
              </h2>
            </motion.div>

            {/* Interactive Elements */}
            <motion.div
              style={{ transform: "translateZ(10px)" }}
              className="flex items-center justify-center space-x-2 opacity-0 group-hover:opacity-100 transition-all duration-300"
              initial={{ y: 10 }}
              animate={{ y: isHovered ? 0 : 10 }}
            >
              {/* Animated Dots */}
              <div className="flex space-x-1">
                {[...Array(3)].map((_, i) => (
                  <motion.div
                    key={i}
                    className="w-1.5 h-1.5 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full"
                    animate={isHovered ? {
                      scale: [1, 1.5, 1],
                      opacity: [0.5, 1, 0.5]
                    } : {}}
                    transition={{
                      duration: 1.2,
                      repeat: Infinity,
                      delay: i * 0.15
                    }}
                  />
                ))}
              </div>
              <span className="text-xs text-gray-600 font-medium">Click to explore</span>
            </motion.div>
          </div>

          {/* Border Glow Animation */}
          <div className="absolute inset-0 rounded-3xl">
            <div className="absolute inset-0 rounded-3xl bg-gradient-to-r from-blue-500/30 via-purple-500/40 to-cyan-500/30 opacity-0 group-hover:opacity-100 transition-opacity duration-500 blur-sm" style={{ padding: '1px' }} />
          </div>

          {/* Corner Decorative Elements */}
          <div className="absolute top-4 left-4 w-8 h-8 border-l-2 border-t-2 border-blue-400/40 rounded-tl-lg opacity-0 group-hover:opacity-100 transition-all duration-300 transform group-hover:scale-110" />
          <div className="absolute top-4 right-4 w-8 h-8 border-r-2 border-t-2 border-purple-400/40 rounded-tr-lg opacity-0 group-hover:opacity-100 transition-all duration-300 transform group-hover:scale-110" />
          <div className="absolute bottom-4 left-4 w-8 h-8 border-l-2 border-b-2 border-cyan-400/40 rounded-bl-lg opacity-0 group-hover:opacity-100 transition-all duration-300 transform group-hover:scale-110" />
          <div className="absolute bottom-4 right-4 w-8 h-8 border-r-2 border-b-2 border-pink-400/40 rounded-br-lg opacity-0 group-hover:opacity-100 transition-all duration-300 transform group-hover:scale-110" />
        </div>
        
        {/* 3D Shadow */}
        <motion.div
          className="absolute inset-0 bg-gradient-to-br from-black/20 to-black/40 blur-2xl rounded-3xl"
          style={{
            transform: "translateZ(-40px) translateY(15px)",
          }}
          animate={{
            opacity: isHovered ? 0.4 : 0.2,
            scale: isHovered ? 1.05 : 0.95,
            y: isHovered ? 20 : 15
          }}
          transition={{ duration: 0.3 }}
        />
      </motion.div>

      {/* CSS for perspective */}
      <style >{`
        .perspective-1000 {
          perspective: 1000px;
        }
      `}</style>
    </div>
  );
}

export default ProductCardsoft;